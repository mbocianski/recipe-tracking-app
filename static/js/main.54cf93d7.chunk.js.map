{"version":3,"sources":["RecipeCreate.js","RecipeView.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","createRecipe","initialFormState","name","cuisine","photo","ingredients","preparation","useState","formData","setFormData","handleChange","target","value","onSubmit","event","preventDefault","htmlFor","id","type","required","onChange","placeholder","className","rows","RecipeView","recipe","deleteRecipe","src","alt","onClick","RecipeList","recipes","map","index","key","RecipeData","App","setRecipes","indexToDelete","currentRecipes","filter","newRecipe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54cf93d7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n\nfunction RecipeCreate({createRecipe}) {\n\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\n  // TODO: Add the required input and textarea form elements.\n  // TODO: Add the required submit and change handlers\n\n  const initialFormState = {\n    name:\"\",\n    cuisine:\"\",\n    photo:\"\",\n    ingredients:\"\",\n    preparation:\"\"\n  }\n\n  const [formData, setFormData] = useState({...initialFormState});\n\n  const handleChange = ({target}) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value\n    })\n  }\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createRecipe(formData);\n    setFormData({...initialFormState});\n  }\n\n  \n\n  return (\n    <form onSubmit={(handleSubmit)} name=\"create\">\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <label htmlFor=\"name\">\n                <input \n                  id=\"name\" \n                  name=\"name\" \n                  type=\"text\"\n                  required={true}\n                  onChange={handleChange}\n                  placeholder=\"Name\"\n                  value={formData.name} />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"cuisine\">\n                <input \n                  id=\"cuisine\" \n                  name=\"cuisine\" \n                  type=\"text\"\n                  required={true}\n                  onChange={handleChange}\n                  placeholder=\"Cuisine\"\n                  value={formData.cuisine} />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"photo\">\n                <input \n                  id=\"photo\" \n                  name=\"photo\" \n                  type=\"url\"\n                  required={true}\n                  onChange={handleChange}\n                  placeholder=\"URL\"\n                  value={formData.photo} />\n              </label>\n            </td>\n            <td className=\"textarea\">\n              <label htmlFor=\"ingredients\">\n                <textarea\n                  id=\"ingredients\" \n                  name=\"ingredients\" \n                  required={true}\n                  onChange={handleChange}\n                  placeholder=\"Ingredients\"\n                  rows={2}\n                  value={formData.ingredients} />\n              </label>\n            </td>\n            <td className=\"textarea\">\n              <label htmlFor=\"name\">\n              <textarea\n                  id=\"preparation\" \n                  name=\"preparation\" \n                  required={true}\n                  onChange={handleChange}\n                  placeholder=\"preparation\"\n                  rows={2}\n                  value={formData.preparation} />\n              </label>\n            </td>\n            <td>\n              <button type=\"submit\">Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React, { useState } from \"react\";\n\nfunction RecipeView ({recipe, deleteRecipe}) {\n    return (    \n        <tr>\n            <td><p>{recipe.name}</p></td>    \n            <td><p>{recipe.cuisine}</p></td>    \n            <td><img src={recipe.photo} alt={recipe.name} /></td>    \n            <td className=\"content_td\"><p>{(recipe.ingredients)}</p></td>\n            <td className=\"content_td\"><p>{(recipe.preparation)}</p></td>\n            <td><button name=\"delete\" onClick={deleteRecipe} >Delete</button></td>    \n        </tr>\n    )\n}\n\n\nexport default RecipeView;","import React from \"react\";\nimport RecipeView from \"./RecipeView\";\n\nfunction RecipeList({recipes, deleteRecipe}) {\n  \n  // TODO: Display the list of recipes using the structure of table that is provided.\n  // TODO: Create at least one additional component that is used by this component.\n  // TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked\n\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody className=\"recipeList\">\n          {recipes.map((recipe, index) => (\n            <RecipeView \n              recipe={recipe}\n              deleteRecipe={() => deleteRecipe(index)}\n              key={index}/>\n          ))\n        }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\"\n\nfunction App() {\n  const [recipes, setRecipes] = useState(RecipeData);\n  \n\n  const deleteRecipe = (indexToDelete) =>\n    setRecipes((currentRecipes) => \n      currentRecipes.filter((recipe, index) => index !== indexToDelete))\n\n  const createRecipe = (newRecipe) => \n    setRecipes((currentRecipes) => [\n      ...currentRecipes, newRecipe\n    ]);\n\n  // TODO: Add the ability for the <RecipeList /> component to list and delete an existing recipe.\n  // TODO: Add the ability for the <RecipeCreate /> component to create new recipes.\n\n  \n  return (\n    <div className=\"App\">\n      <header><h1>Delicious Food Recipes</h1></header>\n      <RecipeList deleteRecipe={deleteRecipe} recipes={recipes} />\n      <RecipeCreate createRecipe={createRecipe} /> \n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}